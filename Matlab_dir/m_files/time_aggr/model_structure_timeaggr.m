function f = model_structure_timeaggr(vParams, vWages, higher_moments, preference_heterogeneity, type_wmatrix, M, empmoms, trans_perm)
%{  
    This function generates the moments conditions for the estimation of 
    the structural model with preference heterogeneity, addressing
    neglected time aggregation in the PSID. It does so for a given value
    for the 27 moments pertaining to the transmission parameters of
    permanent shocks, which is passed on to the function via 'trans_perm'.

    Alexandros Theloudis
    -----------------------------------------------------------------------
%}

%%  1.  INITIALIZE OBJECTS
%   Initialize parameters and vectors to hold moments
%   -----------------------------------------------------------------------

%   Vector of pre-estimated wage parameters:
%   Second moments of wage parameters (required for all specifications):
vH  = vWages(1) ;   % variance:    permanent shock HD
uH  = vWages(2) ;   % variance:    transitory shock HD
vW  = vWages(3) ;   % variance:    permanent shock WF
uW  = vWages(4) ;   % variance:    transitory shock WF
vHW = vWages(5) ;   % covariance:  permanent shocks
uHW = vWages(6) ;   % covariance:  transitory shocks

%   Third moments of wage parameters (required for heterogeneity):
if higher_moments >= 1
	gvH   = vWages(9)  ; % skewness:    permanent shock HD
    guH   = vWages(10) ; % skewness:    transitory shock HD
    gvW   = vWages(11) ; % skewness:    permanent shock WF
    guW   = vWages(12) ; % skewness:    transitory shock WF
    gvH2W = vWages(13) ; % third cross moment: E[vH^2 vW]
    guH2W = vWages(14) ; % third cross moment: E[uH^2 uW]
    gvHW2 = vWages(15) ; % third cross moment: E[vH vW^2]
    guHW2 = vWages(16) ; % third cross moment: E[uH uW^2]
end

%   Vector of structural parameters:
%   Parameters pertaining to the labor supply cross-elasticities (always
%   zero):
eta_h1_w2           = 0.0 ;     % hours1 wrt wage2
eta_h2_w1           = 0.0 ;     % hours2 wrt wage1
Veta_h1_w2          = 0.0 ;     % hours1 wrt wage2
Veta_h2_w1          = 0.0 ;     % hours2 wrt wage1
COVeta_c_w1_h1_w2   = 0.0 ;     % consumption wrt wage1 ~ hours1 wrt wage2
COVeta_c_w1_h2_w1   = 0.0 ;     % consumption wrt wage1 ~ hours2 wrt wage1
COVeta_c_w2_h1_w2   = 0.0 ;     % consumption wrt wage2 ~ hours1 wrt wage2
COVeta_c_w2_h2_w1   = 0.0 ;     % consumption wrt wage2 ~ hours2 wrt wage1
COVeta_h1_w1_h1_w2  = 0.0 ;     % hours1 wrt wage1 ~ hours1 wrt wage2
COVeta_h1_w1_h2_w1  = 0.0 ;     % hours1 wrt wage1 ~ hours2 wrt wage1
COVeta_h1_w2_h2_w1  = 0.0 ;     % hours1 wrt wage2 ~ hours2 wrt wage1
COVeta_h1_w2_h2_w2  = 0.0 ;     % hours1 wrt wage2 ~ hours2 wrt wage2
COVeta_h2_w1_h2_w2  = 0.0 ;     % hours2 wrt wage1 ~ hours2 wrt wage2 
        
%   First moments of estimable parameters:
eta_c_w1  = vParams(1)  ;           % consumption wrt wage1
eta_c_w2  = vParams(2)  ;           % consumption wrt wage2
eta_h1_w1 = vParams(3)  ;           % hours1 wrt wage1
eta_h2_w2 = vParams(4)  ;           % hours2 wrt wage2

%   Second moments of estimable parameters:
if preference_heterogeneity == 0
 	Veta_c_w1           = 0.0 ;     % consumption wrt wage1
  	Veta_c_w2           = 0.0 ;     % consumption wrt wage2
  	Veta_h1_w1          = 0.0 ;     % hours1 wrt wage1
   	Veta_h2_w2          = 0.0 ;     % hours2 wrt wage2
   	COVeta_c_w1_c_w2    = 0.0 ;     % consumption wrt wage1 ~ consumption wrt wage2
  	COVeta_c_w1_h1_w1   = 0.0 ;     % consumption wrt wage1 ~ hours1 wrt wage1
  	COVeta_c_w1_h2_w2   = 0.0 ;     % consumption wrt wage1 ~ hours2 wrt wage2
  	COVeta_c_w2_h1_w1   = 0.0 ;     % consumption wrt wage2 ~ hours1 wrt wage1
    COVeta_c_w2_h2_w2   = 0.0 ;     % consumption wrt wage2 ~ hours2 wrt wage2
    COVeta_h1_w1_h2_w2  = 0.0 ;     % hours1 wrt wage1 ~ hours2 wrt wage2
elseif  preference_heterogeneity == 1
    Veta_c_w1           = vParams(5)  ; % consumption wrt wage1
    Veta_c_w2           = vParams(6)  ; % consumption wrt wage2
    Veta_h1_w1          = vParams(7)  ; % hours1 wrt wage1
    Veta_h2_w2          = vParams(8) ;  % hours2 wrt wage2
    COVeta_c_w1_c_w2    = 0.0 ;         % consumption wrt wage1 ~ consumption wrt wage2
    COVeta_c_w1_h1_w1   = 0.0 ;         % consumption wrt wage1 ~ hours1 wrt wage1   
    COVeta_c_w1_h2_w2   = 0.0 ;         % consumption wrt wage1 ~ hours2 wrt wage2
    COVeta_c_w2_h1_w1   = 0.0 ;         % consumption wrt wage2 ~ hours1 wrt wage1
    COVeta_c_w2_h2_w2   = 0.0 ;         % consumption wrt wage2 ~ hours2 wrt wage2 
    COVeta_h1_w1_h2_w2  = 0.0 ;         % hours1 wrt wage1 ~ hours2 wrt wage2
elseif  preference_heterogeneity == 7
    Veta_c_w1           = vParams(5)  ; % consumption wrt wage1
    Veta_c_w2           = vParams(6)  ; % consumption wrt wage2
    Veta_h1_w1          = vParams(7)  ; % hours1 wrt wage1
    Veta_h2_w2          = vParams(8) ;  % hours2 wrt wage2
    COVeta_c_w1_c_w2    = vParams(9) ;  % consumption wrt wage1 ~ consumption wrt wage2
    COVeta_c_w1_h1_w1   = vParams(10);  % consumption wrt wage1 ~ hours1 wrt wage1
    COVeta_c_w1_h2_w2   = vParams(11);  % consumption wrt wage1 ~ hours2 wrt wage2
    COVeta_c_w2_h1_w1   = vParams(12);  % consumption wrt wage2 ~ hours1 wrt wage1
    COVeta_c_w2_h2_w2   = vParams(13);  % consumption wrt wage2 ~ hours2 wrt wage2
    COVeta_h1_w1_h2_w2  = vParams(14);  % hours1 wrt wage1 ~ hours2 wrt wage2 
end %preference_heterogeneity


%%  2.  DECLARE VALUE FOR TRANSMISSION PARAMETERS OF PERMANENT SHOCKS
%   Obtain values from 'trans_perm' for first and second moments.
%   -----------------------------------------------------------------------

%   Obtain first moments:
Ekappa_cv1      = trans_perm(1) ; 
Ekappa_cv2      = trans_perm(2) ; 
Ekappa_y1v1     = trans_perm(3) ; 
Ekappa_y1v2     = trans_perm(4) ; 
Ekappa_y2v1     = trans_perm(5) ; 
Ekappa_y2v2     = trans_perm(6) ; 

%   Obtain variances:
Vkappa_cv1      = trans_perm(7) ;  
Vkappa_cv2      = trans_perm(8) ;  
Vkappa_y1v1     = trans_perm(9) ;
Vkappa_y1v2     = trans_perm(10) ;
Vkappa_y2v1     = trans_perm(11) ;
Vkappa_y2v2     = trans_perm(12) ;

%   Obtain covariances:
Ckappa_cv1_cv2  = trans_perm(13) ;
Ckappa_cv1_y1v1 = trans_perm(14) ;
Ckappa_cv1_y1v2 = trans_perm(15) ;
Ckappa_cv1_y2v1 = trans_perm(16) ;
Ckappa_cv1_y2v2 = trans_perm(17) ;
Ckappa_cv2_y1v1 = trans_perm(18) ;
Ckappa_cv2_y1v2 = trans_perm(19) ;
Ckappa_cv2_y2v1 = trans_perm(20) ;
Ckappa_cv2_y2v2 = trans_perm(21) ;
Ckappa_y1v1_y1v2= trans_perm(22) ;
Ckappa_y1v1_y2v1= trans_perm(23) ;
Ckappa_y1v1_y2v2= trans_perm(24) ;
Ckappa_y1v2_y2v1= trans_perm(25) ;
Ckappa_y1v2_y2v2= trans_perm(26) ;
Ckappa_y2v1_y2v2= trans_perm(27) ;

%   Declare second moments in the way they appear in the structure:
E2kappa_cv1     = Vkappa_cv1  + Ekappa_cv1^2  ;
E2kappa_cv2     = Vkappa_cv2  + Ekappa_cv2^2  ;
E2kappa_y1v1    = Vkappa_y1v1 + Ekappa_y1v1^2 ;
E2kappa_y1v2    = Vkappa_y1v2 + Ekappa_y1v2^2 ;
E2kappa_y2v1    = Vkappa_y2v1 + Ekappa_y2v1^2 ;
E2kappa_y2v2    = Vkappa_y2v2 + Ekappa_y2v2^2 ;
Ekappa_cv1_cv2  = Ckappa_cv1_cv2   + Ekappa_cv1*Ekappa_cv2  ;
Ekappa_cv1_y1v1 = Ckappa_cv1_y1v1  + Ekappa_cv1*Ekappa_y1v1 ;
Ekappa_cv1_y1v2 = Ckappa_cv1_y1v2  + Ekappa_cv1*Ekappa_y1v2 ;
Ekappa_cv1_y2v1 = Ckappa_cv1_y2v1  + Ekappa_cv1*Ekappa_y2v1 ;
Ekappa_cv1_y2v2 = Ckappa_cv1_y2v2  + Ekappa_cv1*Ekappa_y2v2 ;
Ekappa_cv2_y1v1 = Ckappa_cv2_y1v1  + Ekappa_cv2*Ekappa_y1v1 ;
Ekappa_cv2_y1v2 = Ckappa_cv2_y1v2  + Ekappa_cv2*Ekappa_y1v2 ;
Ekappa_cv2_y2v1 = Ckappa_cv2_y2v1  + Ekappa_cv2*Ekappa_y2v1 ;
Ekappa_cv2_y2v2 = Ckappa_cv2_y2v2  + Ekappa_cv2*Ekappa_y2v2 ;
Ekappa_y1v1_y1v2= Ckappa_y1v1_y1v2 + Ekappa_y1v1*Ekappa_y1v2 ;
Ekappa_y1v1_y2v1= Ckappa_y1v1_y2v1 + Ekappa_y1v1*Ekappa_y2v1 ;
Ekappa_y1v1_y2v2= Ckappa_y1v1_y2v2 + Ekappa_y1v1*Ekappa_y2v2 ;
Ekappa_y1v2_y2v1= Ckappa_y1v2_y2v1 + Ekappa_y1v2*Ekappa_y2v1 ;
Ekappa_y1v2_y2v2= Ckappa_y1v2_y2v2 + Ekappa_y1v2*Ekappa_y2v2 ;
Ekappa_y2v1_y2v2= Ckappa_y2v1_y2v2 + Ekappa_y2v1*Ekappa_y2v2 ;


%%  3.  FIRST MOMENTS PREFERENCES - SECOND MOMENTS WAGES
%   Construct vector of moments E(data_moment_i - model_moment_i) = 0
%   -----------------------------------------------------------------------

%   Matrix 15: E[DwH DyH]   
%   -----------------------------------------------------------------------

%   Intertemporal covariances:
mom_wHyH_a = (1/6)*(M^3 - M)*vH*Ekappa_y1v1 + (1/6)*(M^3 - M)*vHW*Ekappa_y1v2 ...
           - M*(1+eta_h1_w1)*uH - M*eta_h1_w2*uHW ;

mom_wHyH_b = (1/6)*(M^3 - M)*vH*Ekappa_y1v1 + (1/6)*(M^3 - M)*vHW*Ekappa_y1v2 ...
           - M*(1+eta_h1_w1)*uH - M*eta_h1_w2*uHW ;


%   Matrix 35: E[DwW DyH]   
%   -----------------------------------------------------------------------

%   Intertemporal co-variances:
mom_wWyH_a = (1/6)*(M^3 - M)*vHW*Ekappa_y1v1 + (1/6)*(M^3 - M)*vW*Ekappa_y1v2 ...
            - M*(1+eta_h1_w1)*uHW - M*eta_h1_w2*uW ;

mom_wWyH_b = (1/6)*(M^3 - M)*vHW*Ekappa_y1v1 + (1/6)*(M^3 - M)*vW*Ekappa_y1v2 ...
           - M*(1+eta_h1_w1)*uHW - M*eta_h1_w2*uW ;


%   Matrix 17: E[DwH DyW]   
%   -----------------------------------------------------------------------

%   Intertemporal co-variances:
mom_wHyW_a = (1/6)*(M^3 - M)*vH*Ekappa_y2v1 + (1/6)*(M^3 - M)*vHW*Ekappa_y2v2 ... 
           - M*eta_h2_w1*uH - M*(1+eta_h2_w2)*uHW ;

mom_wHyW_b = (1/6)*(M^3 - M)*vH*Ekappa_y2v1 + (1/6)*(M^3 - M)*vHW*Ekappa_y2v2 ... 
           - M*eta_h2_w1*uH - M*(1+eta_h2_w2)*uHW ;


%   Matrix 37: E[DwW DyW]   
%   -----------------------------------------------------------------------

%   Intertemporal co-variances:
mom_wWyW_a = (1/6)*(M^3 - M)*vHW*Ekappa_y2v1 + (1/6)*(M^3 - M)*vW*Ekappa_y2v2 ...
           - M*eta_h2_w1*uHW - M*(1+eta_h2_w2)*uW ;

mom_wWyW_b = (1/6)*(M^3 - M)*vHW*Ekappa_y2v1 + (1/6)*(M^3 - M)*vW*Ekappa_y2v2 ...
           - M*eta_h2_w1*uHW - M*(1+eta_h2_w2)*uW ;

       
%   Matrix 19: E[DwH Dc]   
%   -----------------------------------------------------------------------

%   Intertemporal co-variances 2001-2011:
mom_wHc_a = (1/6)*(M^3 - M)*vH*Ekappa_cv1 + (1/6)*(M^3 - M)*vHW*Ekappa_cv2 ...
          - M*eta_c_w1*uH - M*eta_c_w2*uHW ;

mom_wHc_b = (1/6)*(M^3 - M)*vH*Ekappa_cv1 + (1/6)*(M^3 - M)*vHW*Ekappa_cv2 ...
          - M*eta_c_w1*uH - M*eta_c_w2*uHW ;


%   Matrix 39: E[DwW Dc]   
%   -----------------------------------------------------------------------

%   Intertemporal co-variances 2001-2011:
mom_wWc_a = (1/6)*(M^3 - M)*vHW*Ekappa_cv1 + (1/6)*(M^3 - M)*vW*Ekappa_cv2 ...
          - M*eta_c_w1*uHW - M*eta_c_w2*uW ;

mom_wWc_b = (1/6)*(M^3 - M)*vHW*Ekappa_cv1 + (1/6)*(M^3 - M)*vW*Ekappa_cv2 ...
          - M*eta_c_w1*uHW - M*eta_c_w2*uW ;


%%  4.  FIRST MOMENTS PREFERENCES - THIRD MOMENTS WAGES
%   Construct vector of moments E(data_moment_i - model_moment_i) = 0
%   -----------------------------------------------------------------------

if higher_moments >= 1

%   Matrix 25: E[DwH2 DyH]
%   -----------------------------------------------------------------------

%   Intertemporal covariances 1999-2011:
mom_wH2yH_a = (1/12)*(M^4 - M^2)*gvH*Ekappa_y1v1 + (1/12)*(M^4 - M^2)*gvH2W*Ekappa_y1v2 ...
            - M*(1+eta_h1_w1)*guH - M*eta_h1_w2*guH2W ;

mom_wH2yH_b = (1/12)*(M^4 - M^2)*gvH*Ekappa_y1v1 + (1/12)*(M^4 - M^2)*gvH2W*Ekappa_y1v2 ...
            + M*(1+eta_h1_w1)*guH + M*eta_h1_w2*guH2W ;


%   Matrix 45: E[DwW2 DyH]
%   -----------------------------------------------------------------------

%   Intertemporal co-variances:
mom_wW2yH_a = (1/12)*(M^4 - M^2)*gvHW2*Ekappa_y1v1 + (1/12)*(M^4 - M^2)*gvW*Ekappa_y1v2 ...
            - M*(1+eta_h1_w1)*guHW2 - M*eta_h1_w2*guW ;

mom_wW2yH_b = (1/12)*(M^4 - M^2)*gvHW2*Ekappa_y1v1 + (1/12)*(M^4 - M^2)*gvW*Ekappa_y1v2 ...
            + M*(1+eta_h1_w1)*guHW2 + M*eta_h1_w2*guW ;


%   Matrix 27: E[DwH2 DyW]
%   -----------------------------------------------------------------------

%   Intertemporal co-variances:
mom_wH2yW_a = (1/12)*(M^4 - M^2)*gvH*Ekappa_y2v1 + (1/12)*(M^4 - M^2)*gvH2W*Ekappa_y2v2 ...
            - M*eta_h2_w1*guH - M*(1+eta_h2_w2)*guH2W ;

mom_wH2yW_b = (1/12)*(M^4 - M^2)*gvH*Ekappa_y2v1 + (1/12)*(M^4 - M^2)*gvH2W*Ekappa_y2v2 ...
            + M*eta_h2_w1 * guH + M*(1+eta_h2_w2) * guH2W ;


%   Matrix 47: E[DwW2 DyW]
%   -----------------------------------------------------------------------

%   Intertemporal co-variances:
mom_wW2yW_a = (1/12)*(M^4 - M^2)*gvHW2*Ekappa_y2v1 + (1/12)*(M^4 - M^2)*gvW*Ekappa_y2v2 ...
            - M*eta_h2_w1*guHW2 - M*(1+eta_h2_w2)*guW ;
 
mom_wW2yW_b = (1/12)*(M^4 - M^2)*gvHW2*Ekappa_y2v1 + (1/12)*(M^4 - M^2)*gvW*Ekappa_y2v2 ...
            + M*eta_h2_w1*guHW2 + M*(1+eta_h2_w2)*guW ;


%   Matrix 29: E[DwH2 Dc]
%   -----------------------------------------------------------------------

%   Intertemporal co-variances:
mom_wH2c_a = (1/12)*(M^4 - M^2)*gvH*Ekappa_cv1 + (1/12)*(M^4 - M^2)*gvH2W*Ekappa_cv2 ...
           - M*eta_c_w1*guH - M*eta_c_w2*guH2W ;

mom_wH2c_b = (1/12)*(M^4 - M^2)*gvH*Ekappa_cv1 + (1/12)*(M^4 - M^2)*gvH2W*Ekappa_cv2 ...
           + M*eta_c_w1*guH + M*eta_c_w2*guH2W ;


%   Matrix 49: E[DwW2 Dc] 
%   -----------------------------------------------------------------------

%   Intertemporal co-variances:
mom_wW2c_a = (1/12)*(M^4 - M^2)*gvHW2*Ekappa_cv1 + (1/12)*(M^4 - M^2)*gvW*Ekappa_cv2 ...
           - M*eta_c_w1*guHW2 - M*eta_c_w2*guW ;

mom_wW2c_b = (1/12)*(M^4 - M^2)*gvHW2*Ekappa_cv1 + (1/12)*(M^4 - M^2)*gvW*Ekappa_cv2 ...
           + M*eta_c_w1*guHW2 + M*eta_c_w2*guW ;
end %if higher_moments >= 1


%%  5.  SECOND MOMENTS PREFERENCES - SECOND MOMENTS WAGES
%   Construct vector of moments E(data_moment_i - model_moment_i) = 0
%   -----------------------------------------------------------------------

%   Matrix 55: E[DyH DyH]   
%   -----------------------------------------------------------------------

%   Intertemporal co-variances:
mom_yHyH_a = (1/6)*(M^3 - M)*vH*E2kappa_y1v1 + (1/6)*(M^3 - M)*vW*E2kappa_y1v2 ...
           + (1/3)*(M^3 - M)*vHW*Ekappa_y1v1_y1v2 ...
           - M*(1 + Veta_h1_w1 + eta_h1_w1^2 + 2*eta_h1_w1) * uH ...
           - 2*M*(eta_h1_w2 + COVeta_h1_w1_h1_w2 + eta_h1_w1*eta_h1_w2) * uHW ...
           - M*(Veta_h1_w2 + eta_h1_w2^2) * uW ;


%   Matrix 57: E[DyH DyW]   
%   -----------------------------------------------------------------------

%   Intertemporal co-variances:
mom_yHyW_a = (1/6)*(M^3 - M)*vH*Ekappa_y1v1_y2v1 + (1/6)*(M^3 - M)*vHW*Ekappa_y1v1_y2v2 ...
           + (1/6)*(M^3 - M)*vHW*Ekappa_y1v2_y2v1 + (1/6)*(M^3 - M)*vW*Ekappa_y1v2_y2v2 ...
           - M*(eta_h2_w1 + COVeta_h1_w1_h2_w1 + eta_h1_w1*eta_h2_w1) * uH ...
           - M*(1 + eta_h1_w1 + eta_h2_w2 + COVeta_h1_w1_h2_w2 + eta_h1_w1*eta_h2_w2) * uHW ...
           - M*(COVeta_h1_w2_h2_w1 + eta_h1_w2*eta_h2_w1) * uHW ...
           - M*(eta_h1_w2 + COVeta_h1_w2_h2_w2 + eta_h1_w2*eta_h2_w2) * uW ;

mom_yHyW_b = (1/6)*(M^3 - M)*vH*Ekappa_y1v1_y2v1 + (1/6)*(M^3 - M)*vHW*Ekappa_y1v1_y2v2 ...
           + (1/6)*(M^3 - M)*vHW*Ekappa_y1v2_y2v1 + (1/6)*(M^3 - M)*vW*Ekappa_y1v2_y2v2 ...
           - M*(eta_h2_w1 + COVeta_h1_w1_h2_w1 + eta_h1_w1*eta_h2_w1) * uH ...
           - M*(1 + eta_h1_w1 + eta_h2_w2 + COVeta_h1_w1_h2_w2 + eta_h1_w1*eta_h2_w2) * uHW ...
           - M*(COVeta_h1_w2_h2_w1 + eta_h1_w2*eta_h2_w1) * uHW ...
           - M*(eta_h1_w2 + COVeta_h1_w2_h2_w2 + eta_h1_w2*eta_h2_w2) * uW ;


%   Matrix 77: E[DyW DyW]   
%   -----------------------------------------------------------------------

%   Intertemporal co-variances:
mom_yWyW_a = (1/6)*(M^3 - M)*vH*E2kappa_y2v1 + (1/6)*(M^3 - M)*vW*E2kappa_y2v2 ...
           + (1/3)*(M^3 - M)*vHW*Ekappa_y2v1_y2v2 ...
           - M*(Veta_h2_w1 + eta_h2_w1^2) * uH ...
           - 2*M*(eta_h2_w1 + COVeta_h2_w1_h2_w2 + eta_h2_w1*eta_h2_w2) * uHW ...
           - M*(1 + Veta_h2_w2 + eta_h2_w2^2 + 2*eta_h2_w2) * uW ;


%   Matrix 59: E[DyH Dc]   
%   -----------------------------------------------------------------------

%   Intertemporal co-variances:
mom_yHc_a = (1/6)*(M^3 - M)*vH*Ekappa_cv1_y1v1 + (1/6)*(M^3 - M)*vHW*Ekappa_cv1_y1v2 ...
          + (1/6)*(M^3 - M)*vHW*Ekappa_cv2_y1v1 + (1/6)*(M^3 - M)*vW*Ekappa_cv2_y1v2 ...
          - M*(eta_c_w1 + COVeta_c_w1_h1_w1 + eta_c_w1*eta_h1_w1) * uH ...
          - M*(eta_c_w2 + COVeta_c_w2_h1_w1 + eta_c_w2*eta_h1_w1) * uHW ...
          - M*(COVeta_c_w1_h1_w2 + eta_c_w1*eta_h1_w2) * uHW ...
          - M*(COVeta_c_w2_h1_w2 + eta_c_w2*eta_h1_w2) * uW ;
 
mom_yHc_b = (1/6)*(M^3 - M)*vH*Ekappa_cv1_y1v1 + (1/6)*(M^3 - M)*vHW*Ekappa_cv1_y1v2 ...
          + (1/6)*(M^3 - M)*vHW*Ekappa_cv2_y1v1 + (1/6)*(M^3 - M)*vW*Ekappa_cv2_y1v2 ...
          - M*(eta_c_w1 + COVeta_c_w1_h1_w1 + eta_c_w1*eta_h1_w1) * uH ...
          - M*(eta_c_w2 + COVeta_c_w2_h1_w1 + eta_c_w2*eta_h1_w1) * uHW ...
          - M*(COVeta_c_w1_h1_w2 + eta_c_w1*eta_h1_w2) * uHW ...
          - M*(COVeta_c_w2_h1_w2 + eta_c_w2*eta_h1_w2) * uW ;


%   Matrix 79: E[DyW Dc]   
%   -----------------------------------------------------------------------

%   Intertemporal co-variances:
mom_yWc_a = (1/6)*(M^3 - M)*vH*Ekappa_cv1_y2v1 + (1/6)*(M^3 - M)*vHW*Ekappa_cv1_y2v2 ...
          + (1/6)*(M^3 - M)*vHW*Ekappa_cv2_y2v1 + (1/6)*(M^3 - M)*vW*Ekappa_cv2_y2v2 ...
          - M*(COVeta_c_w1_h2_w1 + eta_c_w1*eta_h2_w1) * uH ...
          - M*(COVeta_c_w2_h2_w1 + eta_c_w2*eta_h2_w1) * uHW ...
          - M*(eta_c_w1 + COVeta_c_w1_h2_w2 + eta_c_w1*eta_h2_w2) * uHW ...
          - M*(eta_c_w2 + COVeta_c_w2_h2_w2 + eta_c_w2*eta_h2_w2) * uW ;

mom_yWc_b = (1/6)*(M^3 - M)*vH*Ekappa_cv1_y2v1 + (1/6)*(M^3 - M)*vHW*Ekappa_cv1_y2v2 ...
          + (1/6)*(M^3 - M)*vHW*Ekappa_cv2_y2v1 + (1/6)*(M^3 - M)*vW*Ekappa_cv2_y2v2 ...
          - M*(COVeta_c_w1_h2_w1 + eta_c_w1*eta_h2_w1) * uH ...
          - M*(COVeta_c_w2_h2_w1 + eta_c_w2*eta_h2_w1) * uHW ...
          - M*(eta_c_w1 + COVeta_c_w1_h2_w2 + eta_c_w1*eta_h2_w2) * uHW ...
          - M*(eta_c_w2 + COVeta_c_w2_h2_w2 + eta_c_w2*eta_h2_w2) * uW ;


%   Matrix 99: E[Dc Dc]   
%   -----------------------------------------------------------------------

%   Intertemporal co-variances:
mom_cc_a = (1/6)*(M^3 - M)*vH*E2kappa_cv1 + (1/6)*(M^3 - M)*vW*E2kappa_cv2 ...
         + (1/3)*(M^3 - M)*vHW*Ekappa_cv1_cv2 ...
         - M*(Veta_c_w1 + eta_c_w1^2) * uH ...
         - 2*M*(COVeta_c_w1_c_w2 + eta_c_w1*eta_c_w2) * uHW ...
         - M*(Veta_c_w2 + eta_c_w2^2) * uW ;


%%  6.  SECOND MOMENTS PREFERENCES - THIRD MOMENTS WAGES
%   Construct vector of moments E(data_moment_i - model_moment_i) = 0
%   -----------------------------------------------------------------------

if higher_moments >= 1

%   Matrix 16: E[DwH DyH2]
%   -----------------------------------------------------------------------

%   Intertemporal co-variances:
mom_wHyH2_a = (1/12)*(M^4 - M^2)*gvH*E2kappa_y1v1 + (1/12)*(M^4 - M^2)*gvHW2*E2kappa_y1v2 ...
            + (1/6)*(M^4 - M^2)*gvH2W*Ekappa_y1v1_y1v2 ...
            + M*(1 + Veta_h1_w1 + eta_h1_w1^2 + 2*eta_h1_w1) * guH ...
            + 2*M*(eta_h1_w2 + COVeta_h1_w1_h1_w2 + eta_h1_w1*eta_h1_w2) * guH2W ...
            + M*(Veta_h1_w2 + eta_h1_w2^2) * guHW2 ;

mom_wHyH2_b = (1/12)*(M^4 - M^2)*gvH*E2kappa_y1v1 + (1/12)*(M^4 - M^2)*gvHW2*E2kappa_y1v2 ...
            + (1/6)*(M^4 - M^2)*gvH2W*Ekappa_y1v1_y1v2 ...
            - M*(1 + Veta_h1_w1 + eta_h1_w1^2 + 2*eta_h1_w1) * guH ...
            - 2*M*(eta_h1_w2 + COVeta_h1_w1_h1_w2 + eta_h1_w1*eta_h1_w2) * guH2W ...
            - M*(Veta_h1_w2 + eta_h1_w2^2) * guHW2 ;


%   Matrix 36: E[DwW DyH2]
%   -----------------------------------------------------------------------

%   Intertemporal co-variances:
mom_wWyH2_a = (1/12)*(M^4 - M^2)*gvH2W*E2kappa_y1v1 + (1/12)*(M^4 - M^2)*gvW*E2kappa_y1v2 ...
            + (1/6)*(M^4 - M^2)*gvHW2*Ekappa_y1v1_y1v2 ...
            + M*(1 + Veta_h1_w1 + eta_h1_w1^2 + 2*eta_h1_w1) * guH2W ...
            + 2*M*(eta_h1_w2 + COVeta_h1_w1_h1_w2 + eta_h1_w1*eta_h1_w2) * guHW2 ...
            + M*(Veta_h1_w2 + eta_h1_w2^2) * guW ;

mom_wWyH2_b = (1/12)*(M^4 - M^2)*gvH2W*E2kappa_y1v1 + (1/12)*(M^4 - M^2)*gvW*E2kappa_y1v2 ...
            + (1/6)*(M^4 - M^2)*gvHW2*Ekappa_y1v1_y1v2 ...
            - M*(1 + Veta_h1_w1 + eta_h1_w1^2 + 2*eta_h1_w1) * guH2W ...
            - 2*M*(eta_h1_w2 + COVeta_h1_w1_h1_w2 + eta_h1_w1*eta_h1_w2) * guHW2 ...
            - M*(Veta_h1_w2 + eta_h1_w2^2) * guW ;


%   Matrix 18: E[DwH DyW2]
%   -----------------------------------------------------------------------

%   Intertemporal co-variances: 
mom_wHyW2_a = (1/12)*(M^4 - M^2)*gvH*E2kappa_y2v1 + (1/12)*(M^4 - M^2)*gvHW2*E2kappa_y2v2 ...
            + (1/6)*(M^4 - M^2)*gvH2W*Ekappa_y2v1_y2v2 ...
            + M*(Veta_h2_w1 + eta_h2_w1^2) * guH ...
            + 2*M*(eta_h2_w1 + COVeta_h2_w1_h2_w2 + eta_h2_w1*eta_h2_w2) * guH2W ...
            + M*(1 + Veta_h2_w2 + eta_h2_w2^2 + 2*eta_h2_w2) * guHW2 ;

mom_wHyW2_b = (1/12)*(M^4 - M^2)*gvH*E2kappa_y2v1 + (1/12)*(M^4 - M^2)*gvHW2*E2kappa_y2v2 ...
            + (1/6)*(M^4 - M^2)*gvH2W*Ekappa_y2v1_y2v2 ...
            - M*(Veta_h2_w1 + eta_h2_w1^2) * guH ...
            - 2*M*(eta_h2_w1 + COVeta_h2_w1_h2_w2 + eta_h2_w1*eta_h2_w2) * guH2W ...
            - M*(1 + Veta_h2_w2 + eta_h2_w2^2 + 2*eta_h2_w2) * guHW2 ;


%   Matrix 38: E[DwW DyW2]   
%   -----------------------------------------------------------------------

%   Intertemporal co-variances:
mom_wWyW2_a = (1/12)*(M^4 - M^2)*gvH2W*E2kappa_y2v1 + (1/12)*(M^4 - M^2)*gvW*E2kappa_y2v2 ...
            + (1/6)*(M^4 - M^2)*gvHW2*Ekappa_y2v1_y2v2 ...
            + M*(Veta_h2_w1 + eta_h2_w1^2) * guH2W ...
            + 2*M*(eta_h2_w1 + COVeta_h2_w1_h2_w2 + eta_h2_w1*eta_h2_w2) * guHW2 ...
            + M*(1 + Veta_h2_w2 + eta_h2_w2^2 + 2*eta_h2_w2) * guW ;

mom_wWyW2_b = (1/12)*(M^4 - M^2)*gvH2W*E2kappa_y2v1 + (1/12)*(M^4 - M^2)*gvW*E2kappa_y2v2 ...
            + (1/6)*(M^4 - M^2)*gvHW2*Ekappa_y2v1_y2v2 ...
            - M*(Veta_h2_w1 + eta_h2_w1^2) * guH2W ...
            - 2*M*(eta_h2_w1 + COVeta_h2_w1_h2_w2 + eta_h2_w1*eta_h2_w2) * guHW2 ...
            - M*(1 + Veta_h2_w2 + eta_h2_w2^2 + 2*eta_h2_w2) * guW ;


%   Matrix 1.10: E[DwH Dc2]
%   -----------------------------------------------------------------------

%   Intertemporal co-variances:
mom_wHc2_a = (1/12)*(M^4 - M^2)*gvH*E2kappa_cv1 + (1/12)*(M^4 - M^2)*gvHW2*E2kappa_cv2 ...
           + (1/6)*(M^4 - M^2)*gvH2W*Ekappa_cv1_cv2 ...
           + M*(Veta_c_w1 + eta_c_w1^2) * guH ...
           + 2*M*(COVeta_c_w1_c_w2 + eta_c_w1*eta_c_w2) * guH2W ...
           + M*(Veta_c_w2 + eta_c_w2^2) * guHW2 ;

mom_wHc2_b = (1/12)*(M^4 - M^2)*gvH*E2kappa_cv1 + (1/12)*(M^4 - M^2)*gvHW2*E2kappa_cv2 ...
           + (1/6)*(M^4 - M^2)*gvH2W*Ekappa_cv1_cv2 ...
           - M*(Veta_c_w1 + eta_c_w1^2) * guH ...
           - 2*M*(COVeta_c_w1_c_w2 + eta_c_w1*eta_c_w2) * guH2W ...
           - M*(Veta_c_w2 + eta_c_w2^2) * guHW2 ;


%   Matrix 3.10: E[DwW Dc2] 
%   -----------------------------------------------------------------------

%   Intertemporal co-variances:
mom_wWc2_a = (1/12)*(M^4 - M^2)*gvH2W*E2kappa_cv1 + (1/12)*(M^4 - M^2)*gvW*E2kappa_cv2 ...
           + (1/6)*(M^4 - M^2)*gvHW2*Ekappa_cv1_cv2 ...
           + M*(Veta_c_w1 + eta_c_w1^2) * guH2W ...
           + 2*M*(COVeta_c_w1_c_w2 + eta_c_w1*eta_c_w2) * guHW2 ...
           + M*(Veta_c_w2 + eta_c_w2^2) * guW ;

mom_wWc2_b = (1/12)*(M^4 - M^2)*gvH2W*E2kappa_cv1 + (1/12)*(M^4 - M^2)*gvW*E2kappa_cv2 ...
           + (1/6)*(M^4 - M^2)*gvHW2*Ekappa_cv1_cv2 ...
           - (Veta_c_w1 + eta_c_w1^2) * guH2W ...
           - 2*(COVeta_c_w1_c_w2 + eta_c_w1*eta_c_w2) * guHW2 ...
           - (Veta_c_w2 + eta_c_w2^2) * guW ;


%   Matrix 1.11: E[DwH DyH DyW]
%   -----------------------------------------------------------------------

%   Intertemporal co-variances:
mom_wHyHyW_a = (1/12)*(M^4 - M^2)*gvH*Ekappa_y1v1_y2v1 + (1/12)*(M^4 - M^2)*gvHW2*Ekappa_y1v2_y2v2 ...
             + (1/12)*(M^4 - M^2)*gvH2W*(Ekappa_y1v2_y2v1 + Ekappa_y1v1_y2v2) ...
             + M*(eta_h2_w1 + COVeta_h1_w1_h2_w1 + eta_h1_w1*eta_h2_w1) * guH ...
             + M*(1 + eta_h1_w1 + eta_h2_w2 + COVeta_h1_w1_h2_w2 + eta_h1_w1*eta_h2_w2) * guH2W ...
             + M*(COVeta_h1_w2_h2_w1 + eta_h1_w2*eta_h2_w1) * guH2W ...
             + M*(eta_h1_w2 + COVeta_h1_w2_h2_w2 + eta_h1_w2*eta_h2_w2) * guHW2 ;

mom_wHyHyW_b = (1/12)*(M^4 - M^2)*gvH*Ekappa_y1v1_y2v1 + (1/12)*(M^4 - M^2)*gvHW2*Ekappa_y1v2_y2v2 ...
             + (1/12)*(M^4 - M^2)*gvH2W*(Ekappa_y1v2_y2v1 + Ekappa_y1v1_y2v2) ...
             - M*(eta_h2_w1 + COVeta_h1_w1_h2_w1 + eta_h1_w1*eta_h2_w1) * guH ...
             - M*(1 + eta_h1_w1 + eta_h2_w2 + COVeta_h1_w1_h2_w2 + eta_h1_w1*eta_h2_w2) * guH2W ...
             - M*(COVeta_h1_w2_h2_w1 + eta_h1_w2*eta_h2_w1) * guH2W ...
             - M*(eta_h1_w2 + COVeta_h1_w2_h2_w2 + eta_h1_w2*eta_h2_w2) * guHW2 ;


%   Matrix 3.11: E[DwW DyH DyW]    
%   -----------------------------------------------------------------------

%   Intertemporal co-variances:
mom_wWyHyW_a = (1/12)*(M^4 - M^2)*gvH2W*Ekappa_y1v1_y2v1 + (1/12)*(M^4 - M^2)*gvW*Ekappa_y1v2_y2v2 ...
             + (1/12)*(M^4 - M^2)*gvHW2*(Ekappa_y1v2_y2v1 + Ekappa_y1v1_y2v2) ...
             + M*(eta_h2_w1 + COVeta_h1_w1_h2_w1 + eta_h1_w1*eta_h2_w1) * guH2W ...
             + M*(1 + eta_h1_w1 + eta_h2_w2 + COVeta_h1_w1_h2_w2 + eta_h1_w1*eta_h2_w2) * guHW2 ...
             + M*(COVeta_h1_w2_h2_w1 + eta_h1_w2*eta_h2_w1) * guHW2 ...
             + M*(eta_h1_w2 + COVeta_h1_w2_h2_w2 + eta_h1_w2*eta_h2_w2) * guW ;

mom_wWyHyW_b = (1/12)*(M^4 - M^2)*gvH2W*Ekappa_y1v1_y2v1 + (1/12)*(M^4 - M^2)*gvW*Ekappa_y1v2_y2v2 ...
             + (1/12)*(M^4 - M^2)*gvHW2*(Ekappa_y1v2_y2v1 + Ekappa_y1v1_y2v2) ...
             - M*(eta_h2_w1 + COVeta_h1_w1_h2_w1 + eta_h1_w1*eta_h2_w1) * guH2W ...
             - M*(1 + eta_h1_w1 + eta_h2_w2 + COVeta_h1_w1_h2_w2 + eta_h1_w1*eta_h2_w2) * guHW2 ...
             - M*(COVeta_h1_w2_h2_w1 + eta_h1_w2*eta_h2_w1) * guHW2 ...
             - M*(eta_h1_w2 + COVeta_h1_w2_h2_w2 + eta_h1_w2*eta_h2_w2) * guW ;


%   Matrix 1.12: E[DwH DyH Dc]
%   -----------------------------------------------------------------------

%   Intertemporal co-variances:
mom_wHyHc_a = (1/12)*(M^4 - M^2)*gvH*Ekappa_cv1_y1v1 + (1/12)*(M^4 - M^2)*gvHW2*Ekappa_cv2_y1v2 ...
            + (1/12)*(M^4 - M^2)*gvH2W*(Ekappa_cv1_y1v2 + Ekappa_cv2_y1v1) ...
            + M*(eta_c_w1 + COVeta_c_w1_h1_w1 + eta_c_w1*eta_h1_w1) * guH ...
            + M*(eta_c_w2 + COVeta_c_w2_h1_w1 + eta_c_w2*eta_h1_w1) * guH2W ...
            + M*(COVeta_c_w1_h1_w2 + eta_c_w1*eta_h1_w2) * guH2W ...
            + M*(COVeta_c_w2_h1_w2 + eta_c_w2*eta_h1_w2) * guHW2 ;

mom_wHyHc_b = (1/12)*(M^4 - M^2)*gvH*Ekappa_cv1_y1v1 + (1/12)*(M^4 - M^2)*gvHW2*Ekappa_cv2_y1v2 ...
            + (1/12)*(M^4 - M^2)*gvH2W*(Ekappa_cv1_y1v2 + Ekappa_cv2_y1v1) ...
            - M*(eta_c_w1 + COVeta_c_w1_h1_w1 + eta_c_w1*eta_h1_w1) * guH ...
            - M*(eta_c_w2 + COVeta_c_w2_h1_w1 + eta_c_w2*eta_h1_w1) * guH2W ...
            - M*(COVeta_c_w1_h1_w2 + eta_c_w1*eta_h1_w2) * guH2W ...
            - M*(COVeta_c_w2_h1_w2 + eta_c_w2*eta_h1_w2) * guHW2 ;


%   Matrix 3.12: E[DwW DyH Dc] 
%   -----------------------------------------------------------------------

%   Intertemporal co-variances:
mom_wWyHc_a = (1/12)*(M^4 - M^2)*gvH2W*Ekappa_cv1_y1v1 + (1/12)*(M^4 - M^2)*gvW*Ekappa_cv2_y1v2 ...
            + (1/12)*(M^4 - M^2)*gvHW2*(Ekappa_cv1_y1v2 + Ekappa_cv2_y1v1) ...
            + M*(eta_c_w1 + COVeta_c_w1_h1_w1 + eta_c_w1*eta_h1_w1) * guH2W ...
            + M*(eta_c_w2 + COVeta_c_w2_h1_w1 + eta_c_w2*eta_h1_w1) * guHW2 ...
            + M*(COVeta_c_w1_h1_w2 + eta_c_w1*eta_h1_w2) * guHW2 ...
            + M*(COVeta_c_w2_h1_w2 + eta_c_w2*eta_h1_w2) * guW ;

mom_wWyHc_b = (1/12)*(M^4 - M^2)*gvH2W*Ekappa_cv1_y1v1 + (1/12)*(M^4 - M^2)*gvW*Ekappa_cv2_y1v2 ...
            + (1/12)*(M^4 - M^2)*gvHW2*(Ekappa_cv1_y1v2 + Ekappa_cv2_y1v1) ...
            - M*(eta_c_w1 + COVeta_c_w1_h1_w1 + eta_c_w1*eta_h1_w1) * guH2W ...
            - M*(eta_c_w2 + COVeta_c_w2_h1_w1 + eta_c_w2*eta_h1_w1) * guHW2 ...
            - M*(COVeta_c_w1_h1_w2 + eta_c_w1*eta_h1_w2) * guHW2 ...
            - M*(COVeta_c_w2_h1_w2 + eta_c_w2*eta_h1_w2) * guW ;


%   Matrix 1.13: E[DwH DyW Dc]
%   -----------------------------------------------------------------------

%   Intertemporal co-variances: 
mom_wHyWc_a = (1/12)*(M^4 - M^2)*gvH*Ekappa_cv1_y2v1 + (1/12)*(M^4 - M^2)*gvHW2*Ekappa_cv2_y2v2 ...
            + (1/12)*(M^4 - M^2)*gvH2W*(Ekappa_cv1_y2v2 + Ekappa_cv2_y2v1) ...
            + M*(COVeta_c_w1_h2_w1 + eta_c_w1*eta_h2_w1) * guH ...
            + M*(COVeta_c_w2_h2_w1 + eta_c_w2*eta_h2_w1) * guH2W ...
            + M*(eta_c_w1 + COVeta_c_w1_h2_w2 + eta_c_w1*eta_h2_w2) * guH2W ...
            + M*(eta_c_w2 + COVeta_c_w2_h2_w2 + eta_c_w2*eta_h2_w2) * guHW2 ;

mom_wHyWc_b = (1/12)*(M^4 - M^2)*gvH*Ekappa_cv1_y2v1 + (1/12)*(M^4 - M^2)*gvHW2*Ekappa_cv2_y2v2 ...
            + (1/12)*(M^4 - M^2)*gvH2W*(Ekappa_cv1_y2v2 + Ekappa_cv2_y2v1) ...
            - M*(COVeta_c_w1_h2_w1 + eta_c_w1*eta_h2_w1) * guH ...
            - M*(COVeta_c_w2_h2_w1 + eta_c_w2*eta_h2_w1) * guH2W ...
            - M*(eta_c_w1 + COVeta_c_w1_h2_w2 + eta_c_w1*eta_h2_w2) * guH2W ...
            - M*(eta_c_w2 + COVeta_c_w2_h2_w2 + eta_c_w2*eta_h2_w2) * guHW2 ;


%   Matrix 3.13: E[DwW DyW Dc] 
%   -----------------------------------------------------------------------

%   Intertemporal co-variances: 
mom_wWyWc_a = (1/12)*(M^4 - M^2)*gvH2W*Ekappa_cv1_y2v1 + (1/12)*(M^4 - M^2)*gvW*Ekappa_cv2_y2v2 ...
            + (1/12)*(M^4 - M^2)*gvHW2*(Ekappa_cv1_y2v2 + Ekappa_cv2_y2v1) ...
            + M*(COVeta_c_w1_h2_w1 + eta_c_w1*eta_h2_w1) * guH2W ...
            + M*(COVeta_c_w2_h2_w1 + eta_c_w2*eta_h2_w1) * guHW2 ...
            + M*(eta_c_w1 + COVeta_c_w1_h2_w2 + eta_c_w1*eta_h2_w2) * guHW2 ...
            + M*(eta_c_w2 + COVeta_c_w2_h2_w2 + eta_c_w2*eta_h2_w2) * guW ;

mom_wWyWc_b = (1/12)*(M^4 - M^2)*gvH2W*Ekappa_cv1_y2v1 + (1/12)*(M^4 - M^2)*gvW*Ekappa_cv2_y2v2 ...
            + (1/12)*(M^4 - M^2)*gvHW2*(Ekappa_cv1_y2v2 + Ekappa_cv2_y2v1) ...
            - M*(COVeta_c_w1_h2_w1 + eta_c_w1*eta_h2_w1) * guH2W ...
            - M*(COVeta_c_w2_h2_w1 + eta_c_w2*eta_h2_w1) * guHW2 ...
            - M*(eta_c_w1 + COVeta_c_w1_h2_w2 + eta_c_w1*eta_h2_w2) * guHW2 ...
            - M*(eta_c_w2 + COVeta_c_w2_h2_w2 + eta_c_w2*eta_h2_w2) * guW ;
end %if higher_moments >= 1


%%  7.  STACK MOMENTS TOGETHER; CHOOSE WEIGHTING MATRIX
%   Stack vectors of moments together; choose GMM weighting matrix
%   -----------------------------------------------------------------------

%   Stack together:    
vMoms = [   mom_wHyH_a ; ...
            mom_wHyH_b ; ...
            mom_wWyH_a ; ...
            mom_wWyH_b ; ...
            mom_wHyW_a ; ...
            mom_wHyW_b ; ...
            mom_wWyW_a ; ...
            mom_wWyW_b ; ...
            mom_wHc_a  ; ...
            mom_wHc_b  ; ... 
            mom_wWc_a  ; ...
            mom_wWc_b  ; ...       
            mom_yHyH_a ; ...
            mom_yHyW_a ; ...
            mom_yHyW_b ; ...
            mom_yWyW_a ; ...
            mom_yHc_a  ; ...
            mom_yHc_b  ; ...
            mom_yWc_a  ; ...
            mom_yWc_b  ; ...
            mom_cc_a ] ;

if  higher_moments == 1
    v3Moms = [  mom_wH2yH_a   ; ...
                mom_wH2yH_b   ; ...
                mom_wW2yH_a   ; ...
                mom_wW2yH_b   ; ...
                mom_wH2yW_a   ; ...
                mom_wH2yW_b   ; ...
                mom_wW2yW_a   ; ... 
                mom_wW2yW_b   ; ... 
                mom_wH2c_a    ; ...
                mom_wH2c_b    ; ...
                mom_wW2c_a    ; ...
                mom_wW2c_b    ; ...
                mom_wHyH2_a   ; ...
                mom_wHyH2_b   ; ...
                mom_wWyH2_a   ; ...
                mom_wWyH2_b   ; ...
                mom_wHyW2_a   ; ...
                mom_wHyW2_b   ; ...
                mom_wWyW2_a   ; ...
                mom_wWyW2_b   ; ...
                mom_wHc2_a    ; ...
                mom_wHc2_b    ; ...
                mom_wWc2_a    ; ...
                mom_wWc2_b    ; ...
                mom_wHyHyW_a  ; ...
                mom_wHyHyW_b  ; ...
                mom_wWyHyW_a  ; ...
                mom_wWyHyW_b  ; ...
                mom_wHyHc_a   ; ...
                mom_wHyHc_b   ; ...
                mom_wWyHc_a   ; ...
                mom_wWyHc_b   ; ...
                mom_wHyWc_a   ; ...
                mom_wHyWc_b   ; ...
                mom_wWyWc_a   ; ...
                mom_wWyWc_b ] ;
    vMoms = [vMoms;v3Moms] ;
end %higher_moments == 1

%   Declare appropriate weighting matrix:
%   A. Equally weighted GMM:
if isequal(type_wmatrix,'eye')
  	wmatrix = eye(size(vMoms,1)) ;
%   B. Diagonally weighted GMM:
%   Note: I normalize the weighting matrix by 1e-4.
else                                    
    if  	higher_moments == 0
        wmatrix = diag(type_wmatrix(24:44).^(-1))./1e+4 ;
   	elseif  higher_moments == 1
     	wmatrix = diag(type_wmatrix(24:80).^(-1))./1e+4 ;
    else
    end 
end

%   Declare appropriate empirical moments:
if higher_moments == 0
    empirical_moments = empmoms(1:21) ;
else
    empirical_moments = empmoms;
end


%%  8.  DELIVER CRITERION OBJECTIVE FUNCTION
%   -----------------------------------------------------------------------

%   Objective function criterion:
f = (empirical_moments-vMoms)' * wmatrix * (empirical_moments-vMoms) ;